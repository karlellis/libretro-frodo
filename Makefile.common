LIBRETRO_COMM_DIR := $(CORE_DIR)/Src/libretro-common
EMU_DIR           := $(CORE_DIR)/Src
GUI_DIR           := $(CORE_DIR)/libretro/gui

INCFLAGS := \
	    -I$(CORE_DIR)/libretro/core \
	    -I$(CORE_DIR)/libretro/include \
	    -I$(CORE_DIR)/libretro/emu \
	    -I$(CORE_DIR)/libretro \
	    -I$(CORE_DIR)/Src \
	    -I$(CORE_DIR)/Src/zlib \
	    -I$(LIBRETRO_COMM_DIR)/include \
	    -I$(CORE_DIR)

ifneq ($(STATIC_LINKING), 1)
SOURCES_C := \
	     $(LIBRETRO_COMM_DIR)/string/stdstring.c \
	     $(LIBRETRO_COMM_DIR)/encodings/encoding_crc32.c \
	     $(LIBRETRO_COMM_DIR)/encodings/encoding_utf.c \
	     $(LIBRETRO_COMM_DIR)/compat/compat_strcasestr.c \
	     $(LIBRETRO_COMM_DIR)/compat/compat_strl.c \
	     $(LIBRETRO_COMM_DIR)/vfs/vfs_implementation.c \
	     $(LIBRETRO_COMM_DIR)/streams/trans_stream_zlib.c \
	     $(LIBRETRO_COMM_DIR)/streams/file_stream.c \
	     $(LIBRETRO_COMM_DIR)/streams/file_stream_transforms.c \
	     $(LIBRETRO_COMM_DIR)/file/file_path_io.c \
	     $(LIBRETRO_COMM_DIR)/file/file_path.c \
	     $(LIBRETRO_COMM_DIR)/time/rtime.c \
	     $(LIBRETRO_COMM_DIR)/compat/fopen_utf8.c
endif

SOURCES_C += $(CORE_DIR)/libretro/scandir.c

ifneq ($(NOLIBCO), 1)
SOURCES_C += $(LIBRETRO_COMM_DIR)/libco/libco.c 
endif

SOURCES_C += \
	     $(CORE_DIR)/Src/zlib/adler32.c \
	     $(CORE_DIR)/Src/zlib/crc32.c \
	     $(CORE_DIR)/Src/zlib/deflate.c \
	     $(CORE_DIR)/Src/zlib/gzclose.c \
	     $(CORE_DIR)/Src/zlib/gzlib.c \
	     $(CORE_DIR)/Src/zlib/gzread.c \
	     $(CORE_DIR)/Src/zlib/gzwrite.c \
	     $(CORE_DIR)/Src/zlib/inffast.c \
	     $(CORE_DIR)/Src/zlib/inflate.c \
	     $(CORE_DIR)/Src/zlib/inftrees.c \
	     $(CORE_DIR)/Src/zlib/trees.c \
	     $(CORE_DIR)/Src/zlib/zutil.c

ifeq ($(NOLIBCO), 1)
	CPPFLAGS += -DNO_LIBCO
endif

SOURCES_CXX := \
	       $(EMU_DIR)/main.cpp \
	       $(EMU_DIR)/Display.cpp \
	       $(EMU_DIR)/Prefs.cpp \
	       $(EMU_DIR)/REU.cpp \
	       $(EMU_DIR)/IEC.cpp \
	       $(EMU_DIR)/1541fs.cpp \
	       $(EMU_DIR)/1541d64.cpp \
	       $(EMU_DIR)/1541t64.cpp \
	       $(EMU_DIR)/1541job.cpp

# SID component selection
ifeq ($(platform), sf2000)
# SF2000 gets optimized SID plus additional optimized components, plus base SID for inheritance
SOURCES_CXX += \
	       $(EMU_DIR)/SID.cpp \
	       $(EMU_DIR)/SID_SF2000.cpp \
	       $(EMU_DIR)/CPUC64_SF2000.cpp \
	       $(EMU_DIR)/Memory_SF2000.cpp \
	       $(EMU_DIR)/VIC_SF2000.cpp
else
SOURCES_CXX += $(EMU_DIR)/SID.cpp
endif

ifeq ($(HAVE_SAM), 1)
SOURCES_CXX += $(EMU_DIR)/SAM.cpp
endif

ifeq ($(EMUTYPE), frodosc)
SOURCES_CXX += \
	       $(EMU_DIR)/C64_SC.cpp \
	       $(EMU_DIR)/CPUC64_SC.cpp \
	       $(EMU_DIR)/VIC_SC.cpp \
	       $(EMU_DIR)/CIA_SC.cpp \
	       $(EMU_DIR)/CPU1541_SC.cpp \
	       $(EMU_DIR)/CPU_common.cpp
CPPFLAGS += -DFRODO_SC
else
# For SF2000, use only optimized components
ifneq ($(platform), sf2000)
SOURCES_CXX += \
	       $(EMU_DIR)/C64.cpp \
	       $(EMU_DIR)/CPUC64.cpp \
	       $(EMU_DIR)/VIC.cpp \
	       $(EMU_DIR)/CIA.cpp \
	       $(EMU_DIR)/CPU1541.cpp
else
# SF2000 uses C64.cpp, VIC.cpp, CPUC64.cpp (for base classes) plus optimized components
SOURCES_CXX += \
	       $(EMU_DIR)/C64.cpp \
	       $(EMU_DIR)/VIC.cpp \
	       $(EMU_DIR)/CPUC64.cpp \
	       $(EMU_DIR)/CIA.cpp \
	       $(EMU_DIR)/CPU1541.cpp
endif
endif
CPPFLAGS += -DPRECISE_CPU_CYCLES=1 -DPRECISE_CIA_CYCLES=1 -DPC_IS_POINTER=0

VERSION   = 4
REVISION  = 2
CPPFLAGS +=  -DFRODO_HPUX_REV=0 -DKBD_LANG=0 -fpermissive

CXXFLAGS += $(CPPFLAGS)

SOURCES_CXX += \
	       $(CORE_DIR)/libretro/core/libretro.cpp \
	       $(CORE_DIR)/libretro/core/core-mapper.cpp \
	       $(CORE_DIR)/libretro/core/graph.cpp

# Skip GUI components for SF2000 (has missing functions)  
ifneq ($(platform), sf2000)
SOURCES_CXX += \
	       $(GUI_DIR)/dialog.cpp\
	       $(GUI_DIR)/paths.cpp \
	       $(GUI_DIR)/file.cpp \
	       $(GUI_DIR)/unzip.cpp \
	       $(GUI_DIR)/thumb.cpp \
	       $(GUI_DIR)/zip.cpp \
	       $(GUI_DIR)/dlgFloppy.cpp \
	       $(GUI_DIR)/dlgFileSelect.cpp \
	       $(GUI_DIR)/dlgJoystick.cpp \
	       $(GUI_DIR)/dlgAbout.cpp \
	       $(GUI_DIR)/dlgSound.cpp \
	       $(GUI_DIR)/dlgAlert.cpp \
	       $(GUI_DIR)/dlgMisc.cpp \
	       $(GUI_DIR)/dlgVideo.cpp \
	       $(GUI_DIR)/dlgMain.cpp \
	       $(GUI_DIR)/dlgSnapshot.cpp \
	       $(GUI_DIR)/sdlgui.cpp
endif
